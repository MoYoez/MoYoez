import type { IRequestAdapter } from '../interfaces/adapter';
import type { LinkModel } from '../models/link';
import type { HTTPClient } from '../core';
import { BaseCrudController } from './base';
declare module '../core/client' {
    interface HTTPClient<T extends IRequestAdapter = IRequestAdapter, ResponseWrapper = unknown> {
        link: LinkController<ResponseWrapper>;
        friend: LinkController<ResponseWrapper>;
    }
}
export declare class LinkController<ResponseWrapper> extends BaseCrudController<LinkModel, ResponseWrapper> {
    protected readonly client: HTTPClient;
    constructor(client: HTTPClient);
    canApplyLink(): Promise<boolean>;
    applyLink(data: Pick<LinkModel, 'avatar' | 'name' | 'description' | 'url' | 'email'> & {
        author: string;
    }): Promise<never>;
    name: string[];
    base: string;
}
