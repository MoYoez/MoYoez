import { autoBind } from '../utils/auto-bind';
export class NoteController {
    constructor(client) {
        this.client = client;
        this.base = 'notes';
        this.name = 'note';
        autoBind(this);
    }
    get proxy() {
        return this.client.proxy(this.base);
    }
    /**
     * 最新日记
     */
    getLatest() {
        return this.proxy.latest.get();
    }
    getNoteById(...rest) {
        const [id, password = undefined, singleResult = false] = rest;
        if (typeof id === 'number') {
            return this.proxy.nid(id.toString()).get({
                params: { password, single: singleResult ? '1' : undefined },
            });
        }
        else {
            return this.proxy(id).get();
        }
    }
    /**
     * 日记列表分页
     */
    getList(page = 1, perPage = 10, options = {}) {
        const { select, sortBy, sortOrder, year } = options;
        return this.proxy.get({
            params: {
                page,
                size: perPage,
                select: select?.join(' '),
                sortBy,
                sortOrder,
                year,
            },
        });
    }
    /**
     * 获取当前日记的上下各 n / 2 篇日记
     */
    getMiddleList(id, size = 5) {
        return this.proxy.list(id).get({
            params: { size },
        });
    }
    /**
     * 喜欢这篇日记
     */
    likeIt(id) {
        return this.proxy.like(id).get();
    }
    /**
     * 获取专栏内的所有日记
     */
    getNoteByTopicId(topicId, page = 1, size = 10, sortOptions = {}) {
        return this.proxy.topics(topicId).get({
            params: { page, size, ...sortOptions },
        });
    }
}
//# sourceMappingURL=note.js.map