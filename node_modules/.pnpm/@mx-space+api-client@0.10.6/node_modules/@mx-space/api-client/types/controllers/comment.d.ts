import type { IRequestAdapter } from '../interfaces/adapter';
import type { IController } from '../interfaces/controller';
import type { PaginationParams } from '../interfaces/params';
import type { IRequestHandler } from '../interfaces/request';
import type { PaginateResult } from '../models/base';
import type { CommentModel } from '../models/comment';
import type { HTTPClient } from '../core';
import type { CommentDto } from '../dtos/comment';
declare module '../core/client' {
    interface HTTPClient<T extends IRequestAdapter = IRequestAdapter, ResponseWrapper = unknown> {
        comment: CommentController<ResponseWrapper>;
    }
}
export declare class CommentController<ResponseWrapper> implements IController {
    private readonly client;
    base: string;
    name: string;
    constructor(client: HTTPClient);
    get proxy(): IRequestHandler<ResponseWrapper>;
    /**
     * 根据 comment id 获取评论, 包括子评论
     */
    getById(id: string): import("../interfaces/request").RequestProxyResult<CommentModel & {
        ref: string;
    }, ResponseWrapper, ResponseWrapper extends unknown ? {
        [key: string]: any;
        data: CommentModel & {
            ref: string;
        };
    } : ResponseWrapper extends {
        data: CommentModel & {
            ref: string;
        };
    } ? ResponseWrapper : Omit<ResponseWrapper, "data"> & {
        data: CommentModel & {
            ref: string;
        };
    }>;
    /**
     * 获取文章的评论列表
     * @param refId 文章 Id
     */
    getByRefId(refId: string, pagination?: PaginationParams): import("../interfaces/request").RequestProxyResult<PaginateResult<CommentModel & {
        ref: string;
    }>, ResponseWrapper, ResponseWrapper extends unknown ? {
        [key: string]: any;
        data: PaginateResult<CommentModel & {
            ref: string;
        }>;
    } : ResponseWrapper extends {
        data: PaginateResult<CommentModel & {
            ref: string;
        }>;
    } ? ResponseWrapper : Omit<ResponseWrapper, "data"> & {
        data: PaginateResult<CommentModel & {
            ref: string;
        }>;
    }>;
    /**
     * 评论
     */
    comment(refId: string, data: CommentDto): import("../interfaces/request").RequestProxyResult<CommentModel, ResponseWrapper, ResponseWrapper extends unknown ? {
        [key: string]: any;
        data: CommentModel;
    } : ResponseWrapper extends {
        data: CommentModel;
    } ? ResponseWrapper : Omit<ResponseWrapper, "data"> & {
        data: CommentModel;
    }>;
    /**
     * 回复评论
     */
    reply(commentId: string, data: CommentDto): import("../interfaces/request").RequestProxyResult<CommentModel, ResponseWrapper, ResponseWrapper extends unknown ? {
        [key: string]: any;
        data: CommentModel;
    } : ResponseWrapper extends {
        data: CommentModel;
    } ? ResponseWrapper : Omit<ResponseWrapper, "data"> & {
        data: CommentModel;
    }>;
}
