"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.attachRequestMethod = void 0;
function attachRequestMethod(target) {
    Object.defineProperty(target, '$$get', {
        value(url, options) {
            // HINT: method get only accept search params;
            const { params = {} } = options;
            const qs = handleSearchParams(params);
            return target.instance.get(`${url}${qs ? `${`?${qs}`}` : ''}`, options);
        },
    });
    ['put', 'post', 'patch', 'delete'].forEach((method) => {
        Object.defineProperty(target, `$$${method}`, {
            value(path, options) {
                return target.instance[method](path, options);
            },
        });
    });
}
exports.attachRequestMethod = attachRequestMethod;
// FIXME: only support string value
function handleSearchParams(obj) {
    if (!obj && typeof obj !== 'object') {
        throw new TypeError('params must be object.');
    }
    if (obj instanceof URLSearchParams) {
        return obj.toString();
    }
    const search = new URLSearchParams();
    Object.entries(obj).forEach(([k, v]) => {
        if (typeof v === 'undefined' ||
            Object.prototype.toString.call(v) === '[object Null]') {
            return;
        }
        search.set(k, v);
    });
    return search.toString();
}
//# sourceMappingURL=attach-request.js.map